SHOW DATABASES; - показать все БД
CREATE DATABASES "название БД"; - создание БД
DROP DATABASES "название БД"; - удаление БД
USE "название БД"; - использование БД
SHOW TABLES; - показ таблиц в БД
SHOW COLUMNS FROM "название таблицы" - просмотр информации из таблицы
INSERT INTO "название таблицы" ("название поля") values ("значение") - заполнение таблицы
SELECT * FROM "название таблицы" - выводит на экран всё содержимое таблицы
SELECT "название поля" FROM "название таблицы" - выводит на экран поля таблицы
SELECT DISTINCT "навзание поля" FROM "название таблицы" - выводит на экран уникальные значения
SELECT * FROM "название таблицы" WHERE "условие" - вывод данных с определенным условием
SELECT * FROM "название таблицы" WHERE "условие" LIMIT "количество записей на вывод"- вывод определенного количества данных с определенным условием
SELECT "название поля" AS "новое название поля" FROM "название таблицы" - вывод таблицы с измененными названиями
SELECT * FROM "название таблицы" ORDER BY "название поля" - вывод таблицы с сортировкой по определенному полю
SELECT * FROM "название таблицы" ORDER BY "название поля" DESC - вывод таблицы с сортировкой по определенному полю в обратном порядке
ALTER TABLE "название таблицы" ADD "название поля" - добавление нового поля в таблицу
UPDATE "название таблицы" SET "изменение значения у поля" "условия" - изменение полей таблицы
SELECT * FROM "название таблицы" WHERE "название поля" LIKE "%" - вывод данных, которые содержат заданную строку, % обозначает любое количество символов
SELECT * FROM "название таблицы" WHERE "название поля" BETWEEN "значения" - вывод данных, указанное значение полей которых находится в определенном промежутке
DELETE FROM "название таблицы" WHERE "условие" - удаление данных из таблицы по определенному условию
SELECT "название левой таблицы"."поле левой таблицы", "название правой таблицы"."поле правой таблицы" FROM "навзвание левой таблицы" INNER JOIN "название правой таблицы" ON "условие объединения" - объединение таблиц
SELECT "название левой таблицы"."поле левой таблицы", "название правой таблицы"."поле правой таблицы" FROM "навзвание левой таблицы" LEFT OUTER JOIN "название правой таблицы" ON "условие объединения" - левостороннее объединение таблиц
SELECT "название левой таблицы"."поле левой таблицы", "название правой таблицы"."поле правой таблицы" FROM "навзвание левой таблицы" RIGHT OUTER JOIN "название правой таблицы" ON "условие объединения" - правостороннее объединение таблиц
SELECT * FROM "навзвание таблицы" UNION SELECT * FROM "название таблицы"; - объединение запроса из двух таблиц
SELECT "название функции"("название поля") FROM "навзвание таблицы";
SELECT "навзвание поля", "навзвание функции" FROM "навзвание таблицы" GROUP BY "название поля" - вывод сгрупированной по значению таблицы

Пример создания таблицы в MySQL:

CREATE TABLE teacher(
    id INT AUTO_INCREMENT PRIMARY KEY,
    surname VARCHAR(255) NOT NULL
);

CREATE TABLE lesson(
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    teacher_id INT NOT NULL,ы
    FOREIGN KEY (teacher_id) references teacher(id)
);
